import numpy as np

arr = np.array([1,2,3,4])
arr1 = np.arange(10,14)

if False:
	#will calculate sign of every number
    #like sin 1, sin2

    print("SIN value of arr is : ", print(np.sin(arr)))
    #will multiply 10 to all numbers
    #of array generated by sin of arr
    #vector product
    print(10*np.sin(arr))

if False:
    #will sum every number of arr1 and arr
    print("SUM is : ",arr + arr1)

    #will substract every number of arr1 and arr
    arr2 = arr1-arr
    print("Diff is : ",arr2)

    #will square every number of arr2
    print("Square is : ",arr2**2)

    #multiply 2 arrays
    print("Multiplication is : ", arr*arr1)

    #divide 2 arrays
    print("Division is : ",arr/arr1)

    #mod of 2 arrays
    print("Modulus of array is : ", arr%arr1)

    #x^y of 2 arrays 
    print("Powers of components of array is : ", arr**arr1)


    #multiplication of 2-d arrays
    '''
    1 2  2 0      ==   1*2    2*0
    3 4  1 3           3*1    4	*3
    this does not corresponds to
    matrix multiplication
    '''
    a = np.array([[1,2], [3,4]], float)
    b = np.array([[2,0], [1,3]], float)
    print(a*b)

    #will compare all value of arr1 with 2
    #and return a array of boolean of results
    print(arr1 > 2)

if False:
    #concatenate multiple arrays || 1D
    x = np.array(range(0,6), float)
    y = np.array(range(6,10), float)
    z = np.array(range(10,16), float)
    a = np.concatenate((x, y, z))
    print(a)

if False:
    #concatenate multiple arrays || 2D
    a = np.array([[1, 2], [3, 4]], float)
    b = np.array([[5, 6], [7,8]], float)
    print(np.concatenate((a,b)))
    print(np.concatenate((a,b), axis=0))
    print(np.concatenate((a,b), axis=1))


if False:
    '''
    array operation is only possible if size of arrays are same
    '''
    b = np.array([-1, 3], float)
    #print(arr+x) #error

    '''
    However, arrays that do not match in the number of dimensions 
    will be broadcasted by Python to perform mathematical operations.
    '''

    a = np.array([[1, 2], [3, 4], [5, 6]], float)
    print(a+b)
    #here in above operation 1 row of arr b is repeated thrice to
    #satisfy the operation
    

if False:
    '''
    square root of all array contents
    '''
    a = np.array([1, 2, 3, 4])
    print(np.sqrt(a))


if False:
    '''
    math function in numpy : 
    floor, 
    ceil, and 
    rint 

    give the lower, upper, or nearest (rounded) integer
    '''
    a = np.array([1.1, 1.5, 1.9], float)
    print(np.floor(a))
    print(np.ceil(a))
    print(np.rint(a))

if True:
    #mathematical constants
    print(np.pi)
    print(np.e)
